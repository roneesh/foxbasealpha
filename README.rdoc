CURRENT TO-DO

  1. Geolocate with HTML5
  2. Geolocate with googlemaps API (seems more accurate than HTML5, but more complex to do).
  3. Log-ins with Google ID

BUSINESS RULES:

- A communications platform for sending Geo-tagged micro-posts *DONE*
- A user sends out a message that has a lat/lng coordinates attached *DONE*
- That message is also part of an alpha  *DONE*
- An alpha is a bank of messages *DONE*
- An alpha is public or private *DONE*
- Any user can send to a public alpha *DONE*
- Private alphas only allow certain users *DONE*
- A user can create an alpha *DONE*
- A Private alpha has an admin who can add users to a whitelist *DONE*
- An Alpha has a source location, with a radius in meters that it accepts messags for

MODELS:

User
  id, Name:string, email:string, handle:string, password_digest:string, site_admin:boolean

Micropost
  id, content:string user_id:integer, alpha_id:integer, lat:decimal, alpha_id:integer, anonymous:boolean

Alpha
  id, name:string, origin_point_latitude:decmial, origin_point_longitude:decimal, isprivate:boolean (default: false), radius:decimal (a radius from the origin point in miles, used to extrapolate other lat/lng end points), admin_id:integer

Whitelist
  id, user_id:integer, alpha_id:integerUser


ASSOCIATIONS:

User h_m microposts
User h_m whitelists
User b_t alpha


Alpha h_m users, through whitelists
Alpha h_m whitelists
Alpha h_m microposts

Micropost b_t alpha
Micropost b_t user

Whitelist b_t alpha
Whitelist b_t user

VALIDATIONS:

User
  Must have name/email to signup *DONE*

Micropost
  must have content to add to alpha *DONE*
  must be associated to an alpha *DONE*
  must be able to detect lat/lng before post *DONE*
  post saves with lat/lng coords. *DONE*

Alpha
  rnages will start out circular, with a 
  must have range specified

Whitelist
  validates user_id within scope of alpha_id, in that all whitelist entries with a certain alpha_id can't have two entries with the same user_id. *DONE*